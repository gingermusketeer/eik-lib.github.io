(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{117:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(r),d=n,f=p["".concat(s,".").concat(d)]||p[d]||b[d]||i;return r?a.a.createElement(f,o(o({ref:t},l),{},{components:r})):a.a.createElement(f,o({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var l=2;l<i;l++)s[l]=r[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},74:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return u}));var n=r(3),a=r(7),i=(r(0),r(117)),s={id:"server",title:"Server",sidebar_label:"Server"},o={unversionedId:"server",id:"server",isDocsHomePage:!1,title:"Server",description:"The Eik server is a node.js application distributed as the @eik/service NPM package. It aims to be runnable as a service out of the box but still be flexible and customizable enough to suite a wide range of infrastructures needs.",source:"@site/docs/server.md",slug:"/server",permalink:"/docs/server",version:"current",sidebar_label:"Server",sidebar:"mainSidebar",previous:{title:"Putting It All Together",permalink:"/docs/client_putting_it_all_together"},next:{title:"Eik server - Programatic API",permalink:"/docs/server_api"}},c=[{value:"Overview",id:"overview",children:[]},{value:"Customized setup",id:"customized-setup",children:[]}],l={rightToc:c};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The Eik server is a node.js application distributed as the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.npmjs.com/package/@eik/service"}),Object(i.b)("inlineCode",{parentName:"a"},"@eik/service"))," NPM package. It aims to be runnable as a service out of the box but still be flexible and customizable enough to suite a wide range of infrastructures needs."),Object(i.b)("p",null,"The only pre-requirement to run the Eik server is ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://nodejs.org/"}),"node.js 12.x or newer"),"."),Object(i.b)("p",null,"The fastest way to get a running instance of the Eik server is by using NPX:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"npx @eik/service\n")),Object(i.b)("p",null,"This will install the latest Eik server and start it at ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"http://localhost:4001"}),"http://localhost:4001"),". By default all uploaded assets will be stored in a sub-folder of the OS temp directory (NOTE: they will be lost when the OS clears the temp directory). The default authentication key is ",Object(i.b)("inlineCode",{parentName:"p"},"change_me"),"."),Object(i.b)("h2",{id:"overview"},"Overview"),Object(i.b)("h2",{id:"customized-setup"},"Customized setup"),Object(i.b)("p",null,"The Eik service builds upon ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.fastify.io/"}),"Fastify")," and is in addition to being a standalone server also exposed as a Fastify plugin. This makes it extremely flexible and easy to set up a custom Eik service."),Object(i.b)("p",null,"Example of a custom server using the sink for Google Cloud Storage and extending the HTTP API with custom ready checks:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const fastify = require('fastify');\nconst Service = require('@eik/service');\nconst Sink = require('@eik/sink-gcs');\n\n// Set up the Google Cloud Storage sink\nconst sink = new Sink(...);\n\n// Set up the Eik service as a plugin\nconst service = new Service({ customSink: sink });\n\n// Set up Fastify\nconst app = fastify({\n    ignoreTrailingSlash: true,\n    modifyCoreObjects: false,\n    trustProxy: true,\n});\n\n// Register the Eik service in Fastify\napp.register(service.api());\n\n// Append custom HTTP ready checks\napp.get('/_/health', (request, reply) => {\n    reply.send('ok');\n});\n\napp.get('/_/ready', (request, reply) => {\n    reply.send('ok');\n});\n\n// Start the server\nconst run = async () => {\n    await service.health();\n    await app.listen(service.config.get('http.port'), service.config.get('http.address'));\n}\nrun();\n")))}u.isMDXComponent=!0}}]);