(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{161:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return o})),n.d(a,"metadata",(function(){return s})),n.d(a,"rightToc",(function(){return l})),n.d(a,"default",(function(){return c}));var r=n(2),t=n(9),i=(n(0),n(166)),o={id:"server_file_structure",title:"Eik server - File structure",sidebar_label:"File structure"},s={id:"server_file_structure",title:"Eik server - File structure",description:"The EIK server stores files in the following structure:",source:"@site/docs/server_file_structure.md",permalink:"/docs/server_file_structure",sidebar_label:"File structure",sidebar:"someSidebar",previous:{title:"Eik server - REST API",permalink:"/docs/server_rest_api"}},l=[{value:"Packages",id:"packages",children:[]},{value:"NPM Packages",id:"npm-packages",children:[]},{value:"Import Maps",id:"import-maps",children:[]},{value:"Aliases",id:"aliases",children:[]}],p={rightToc:l};function c(e){var a=e.components,n=Object(t.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:a,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The EIK server stores files in the following structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),":root\n\u2514\u2500\u2500 :org\n    \u251c\u2500\u2500 map\n    \u2502\xa0\xa0 \u2514\u2500\u2500 :name\n    \u2502\xa0\xa0     \u251c\u2500\u2500 :version.import-map.json\n    \u2502\xa0\xa0     \u251c\u2500\u2500 :major.alias.json\n    \u2502       \u2514\u2500\u2500 versions.json\n    \u251c\u2500\u2500 pkg\n    \u2502   \u2514\u2500\u2500 :name\n    \u2502       \u251c\u2500\u2500 :version\n    \u2502       \u2502\xa0\xa0 \u251c\u2500\u2500 *\n    \u2502       \u251c\u2500\u2500 :version.package.json\n    \u2502       \u251c\u2500\u2500 :major.alias.json\n    \u2502       \u2514\u2500\u2500 versions.json\n    \u2514\u2500\u2500 npm\n        \u2514\u2500\u2500 :name\n            \u251c\u2500\u2500 :version\n            \u2502\xa0\xa0 \u251c\u2500\u2500 *\n            \u251c\u2500\u2500 :version.package.json\n            \u251c\u2500\u2500 :major.alias.json\n            \u2514\u2500\u2500 versions.json\n")),Object(i.b)("p",null,"Parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":root")," is the root folder for everything."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":org")," is the name of an organisation."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of a package."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," is the full semver version of a package."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":major")," is the major semver version of a full semver version of a package.")),Object(i.b)("h2",{id:"packages"},"Packages"),Object(i.b)("p",null,"Packages are stored under ",Object(i.b)("inlineCode",{parentName:"p"},"/:root/:org/pkg/:name/:version/")," and the structure of a package is\narbitrary and untouched during upload by the service."),Object(i.b)("p",null,"The file structure of a package is stored in a package file at ",Object(i.b)("inlineCode",{parentName:"p"},"/:root/:org/pkg/:name/:version.package.json"),"."),Object(i.b)("h2",{id:"npm-packages"},"NPM Packages"),Object(i.b)("p",null,'NPM packages are packages from the NPM registry that are then published to Eik as a "copy". Packages from\nthe NPM registry are published under this namespace to avoid name collision with other packages.'),Object(i.b)("p",null,"NPM packages are stored under ",Object(i.b)("inlineCode",{parentName:"p"},"/:root/:org/npm/:name/:version/")," and the structure of a package is\narbitrary and is not changed during upload by the service."),Object(i.b)("p",null,"The file structure of an NPM package is stored in a package meta file at ",Object(i.b)("inlineCode",{parentName:"p"},"/:root/:org/pkg/:name/:version.package.json"),"."),Object(i.b)("h2",{id:"import-maps"},"Import Maps"),Object(i.b)("p",null,"Import maps are stored under ",Object(i.b)("inlineCode",{parentName:"p"},"/:root/:org/map/:name/:version.import-map.json"),". The filename of\nimport maps is strict and conforms to the version number it's given with a ",Object(i.b)("inlineCode",{parentName:"p"},".json")," extension."),Object(i.b)("p",null,"The filename of import maps prior to uploading to the service can be anything. The service will\nconvert the file name according to the parameters given when uploading it."),Object(i.b)("h2",{id:"aliases"},"Aliases"),Object(i.b)("p",null,"Packages, NPM packages and import map versions can be aliased. An alias is a semver major version of a\nfull semver version and is a way to map a major version to a given full semver version of a\npackage or import map."),Object(i.b)("p",null,"This alias mapping is stored alongside the version of a package or import map version:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Package alias path: ",Object(i.b)("inlineCode",{parentName:"li"},"/:root/:org/pkg/:name/:major.alias.json")),Object(i.b)("li",{parentName:"ul"},"NPM package alias path: ",Object(i.b)("inlineCode",{parentName:"li"},"/:root/:org/npm/:name/:major.alias.json")),Object(i.b)("li",{parentName:"ul"},"Import map alias path: ",Object(i.b)("inlineCode",{parentName:"li"},"/:root/:org/map/:name/:major.alias.json"))))}c.isMDXComponent=!0}}]);